{
  "info": {
    "name": "Go-Core-Bank API Collections",
    "description": "Complete Core Banking Microservices API Collection\n\nThis collection contains all endpoints for the Go-Core-Bank platform including Customer Service, Account Service, Transaction Service, and other banking microservices.",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string",
      "description": "Base URL for Customer Service"
    },
    {
      "key": "accountServiceUrl",
      "value": "http://localhost:8081",
      "type": "string",
      "description": "Base URL for Account Service"
    },
    {
      "key": "transactionServiceUrl",
      "value": "http://localhost:8082",
      "type": "string",
      "description": "Base URL for Transaction Service"
    },
    {
      "key": "apiVersion",
      "value": "v1",
      "type": "string",
      "description": "API Version"
    },
    {
      "key": "customerId",
      "value": "",
      "type": "string",
      "description": "Dynamic Customer ID for testing"
    },
    {
      "key": "accountId",
      "value": "",
      "type": "string",
      "description": "Dynamic Account ID for testing"
    },
    {
      "key": "transactionId",
      "value": "",
      "type": "string",
      "description": "Dynamic Transaction ID for testing"
    }
  ],
  "item": [
    {
      "name": "Customer-Service",
      "item": [
        {
          "name": "Health Check",
          "item": [
            {
              "name": "Customer Service Health",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/health",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "health"
                  ]
                },
                "description": "Check the health status of the Customer Service"
              },
              "response": [
                {
                  "name": "Healthy Response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/health",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "health"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": \"healthy\",\n  \"service\": \"customer-service\",\n  \"version\": \"1.0.0\"\n}"
                }
              ]
            }
          ],
          "description": "Health monitoring endpoints for Customer Service"
        },
        {
          "name": "Customer Management",
          "item": [
            {
              "name": "Create Customer",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test response status",
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "// Test response structure",
                      "pm.test('Response has required fields', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('first_name');",
                      "    pm.expect(responseJson).to.have.property('last_name');",
                      "    pm.expect(responseJson).to.have.property('email');",
                      "    pm.expect(responseJson).to.have.property('status');",
                      "});",
                      "",
                      "// Store customer ID for subsequent requests",
                      "if (pm.response.code === 201) {",
                      "    const responseJson = pm.response.json();",
                      "    if (responseJson.id) {",
                      "        pm.collectionVariables.set('customerId', responseJson.id);",
                      "        console.log('Stored customer ID:', responseJson.id);",
                      "    }",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"phone\": \"+1-555-0123\",\n  \"date_of_birth\": \"1990-01-15T00:00:00Z\",\n  \"address\": {\n    \"street\": \"123 Main St\",\n    \"city\": \"Anytown\",\n    \"state\": \"CA\",\n    \"postal_code\": \"12345\",\n    \"country\": \"USA\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/{{apiVersion}}/customers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "{{apiVersion}}",
                    "customers"
                  ]
                },
                "description": "Create a new customer with the provided information"
              },
              "response": [
                {
                  "name": "Success Response",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"phone\": \"+1-555-0123\",\n  \"date_of_birth\": \"1990-01-15T00:00:00Z\",\n  \"address\": {\n    \"street\": \"123 Main St\",\n    \"city\": \"Anytown\",\n    \"state\": \"CA\",\n    \"postal_code\": \"12345\",\n    \"country\": \"USA\"\n  }\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/{{apiVersion}}/customers",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "{{apiVersion}}",
                        "customers"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"phone\": \"+1-555-0123\",\n  \"date_of_birth\": \"1990-01-15T00:00:00Z\",\n  \"address\": {\n    \"street\": \"123 Main St\",\n    \"city\": \"Anytown\",\n    \"state\": \"CA\",\n    \"postal_code\": \"12345\",\n    \"country\": \"USA\"\n  },\n  \"status\": \"active\",\n  \"created_at\": \"2025-01-17T10:30:00Z\",\n  \"updated_at\": \"2025-01-17T10:30:00Z\"\n}"
                },
                {
                  "name": "Validation Error",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"first_name\": \"\",\n  \"email\": \"invalid-email\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/{{apiVersion}}/customers",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "{{apiVersion}}",
                        "customers"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"Invalid request body\",\n  \"message\": \"validation error details\"\n}"
                }
              ]
            },
            {
              "name": "Create Customer - Alternative Date Formats",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test response status",
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "// Store customer ID for subsequent requests",
                      "if (pm.response.code === 201) {",
                      "    const responseJson = pm.response.json();",
                      "    if (responseJson.id) {",
                      "        pm.collectionVariables.set('customerId', responseJson.id);",
                      "        console.log('Stored customer ID:', responseJson.id);",
                      "    }",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"first_name\": \"Jane\",\n  \"last_name\": \"Smith\",\n  \"email\": \"jane.smith@example.com\",\n  \"phone\": \"+1-555-0124\",\n  \"date_of_birth\": \"1985-05-20T12:00:00Z\",\n  \"address\": {\n    \"street\": \"456 Oak Ave\",\n    \"city\": \"Newtown\",\n    \"state\": \"NY\",\n    \"postal_code\": \"67890\",\n    \"country\": \"USA\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/{{apiVersion}}/customers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "{{apiVersion}}",
                    "customers"
                  ]
                },
                "description": "Create customer with full RFC3339 timestamp format and structured address"
              }
            },
            {
              "name": "Create Customer - Minimal Address",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Test response status",
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "// Store customer ID for subsequent requests",
                      "if (pm.response.code === 201) {",
                      "    const responseJson = pm.response.json();",
                      "    if (responseJson.id) {",
                      "        pm.collectionVariables.set('customerId', responseJson.id);",
                      "        console.log('Stored customer ID:', responseJson.id);",
                      "    }",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"first_name\": \"Mike\",\n  \"last_name\": \"Johnson\",\n  \"email\": \"mike.johnson@example.com\",\n  \"phone\": \"+1-555-0125\",\n  \"date_of_birth\": \"1992-11-30T00:00:00Z\",\n  \"address\": {\n    \"street\": \"789 Pine St\",\n    \"city\": \"Springfield\",\n    \"state\": \"\",\n    \"postal_code\": \"\",\n    \"country\": \"USA\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/{{apiVersion}}/customers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "{{apiVersion}}",
                    "customers"
                  ]
                },
                "description": "Create customer with minimal address information (some fields empty)"
              }
            },
            {
              "name": "Get Customer by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Customer data is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('first_name');",
                      "    pm.expect(responseJson).to.have.property('last_name');",
                      "    pm.expect(responseJson).to.have.property('email');",
                      "    pm.expect(responseJson).to.have.property('address');",
                      "    pm.expect(responseJson.address).to.have.property('street');",
                      "    pm.expect(responseJson.address).to.have.property('city');",
                      "    pm.expect(responseJson.status).to.be.oneOf(['active', 'inactive', 'suspended', 'closed']);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/{{apiVersion}}/customers/{{customerId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "{{apiVersion}}",
                    "customers",
                    "{{customerId}}"
                  ]
                },
                "description": "Retrieve a customer's information by their UUID"
              },
              "response": [
                {
                  "name": "Success Response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/{{apiVersion}}/customers/550e8400-e29b-41d4-a716-446655440000",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "{{apiVersion}}",
                        "customers",
                        "550e8400-e29b-41d4-a716-446655440000"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"phone\": \"+1-555-0123\",\n  \"date_of_birth\": \"1990-01-15T00:00:00Z\",\n  \"address\": {\n    \"street\": \"123 Main St\",\n    \"city\": \"Anytown\",\n    \"state\": \"CA\",\n    \"postal_code\": \"12345\",\n    \"country\": \"USA\"\n  },\n  \"status\": \"active\",\n  \"created_at\": \"2025-01-17T10:30:00Z\",\n  \"updated_at\": \"2025-01-17T10:30:00Z\"\n}"
                },
                {
                  "name": "Customer Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/{{apiVersion}}/customers/00000000-0000-0000-0000-000000000000",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "{{apiVersion}}",
                        "customers",
                        "00000000-0000-0000-0000-000000000000"
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"Customer not found\",\n  \"message\": \"customer with id 00000000-0000-0000-0000-000000000000 not found\"\n}"
                }
              ]
            },
            {
              "name": "Update Customer",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Updated customer data is valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('updated_at');",
                      "    pm.expect(responseJson.updated_at).to.not.equal(responseJson.created_at);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"first_name\": \"John\",\n  \"last_name\": \"Smith\",\n  \"email\": \"john.smith@example.com\",\n  \"phone\": \"+1-555-0124\",\n  \"date_of_birth\": \"1990-01-15T00:00:00Z\",\n  \"address\": {\n    \"street\": \"456 Oak Ave\",\n    \"city\": \"Newtown\",\n    \"state\": \"NY\",\n    \"postal_code\": \"67890\",\n    \"country\": \"USA\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/{{apiVersion}}/customers/{{customerId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "{{apiVersion}}",
                    "customers",
                    "{{customerId}}"
                  ]
                },
                "description": "Update an existing customer's information"
              },
              "response": [
                {
                  "name": "Success Response",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"first_name\": \"John\",\n  \"last_name\": \"Smith\",\n  \"email\": \"john.smith@example.com\",\n  \"phone\": \"+1-555-0124\",\n  \"date_of_birth\": \"1990-01-15T00:00:00Z\",\n  \"address\": {\n    \"street\": \"456 Oak Ave\",\n    \"city\": \"Newtown\",\n    \"state\": \"NY\",\n    \"postal_code\": \"67890\",\n    \"country\": \"USA\"\n  }\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/{{apiVersion}}/customers/550e8400-e29b-41d4-a716-446655440000",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "{{apiVersion}}",
                        "customers",
                        "550e8400-e29b-41d4-a716-446655440000"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Smith\",\n  \"email\": \"john.smith@example.com\",\n  \"phone\": \"+1-555-0124\",\n  \"date_of_birth\": \"1990-01-15T00:00:00Z\",\n  \"address\": {\n    \"street\": \"456 Oak Ave\",\n    \"city\": \"Newtown\",\n    \"state\": \"NY\",\n    \"postal_code\": \"67890\",\n    \"country\": \"USA\"\n  },\n  \"status\": \"active\",\n  \"created_at\": \"2025-01-17T10:30:00Z\",\n  \"updated_at\": \"2025-01-17T11:45:00Z\"\n}"
                }
              ]
            },
            {
              "name": "Delete Customer",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Status code is 204', function () {",
                      "    pm.response.to.have.status(204);",
                      "});",
                      "",
                      "pm.test('Response body is empty', function () {",
                      "    pm.expect(pm.response.text()).to.be.empty;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/{{apiVersion}}/customers/{{customerId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "{{apiVersion}}",
                    "customers",
                    "{{customerId}}"
                  ]
                },
                "description": "Delete a customer by their UUID (soft delete)"
              },
              "response": [
                {
                  "name": "Success Response",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/{{apiVersion}}/customers/550e8400-e29b-41d4-a716-446655440000",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "{{apiVersion}}",
                        "customers",
                        "550e8400-e29b-41d4-a716-446655440000"
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": null,
                  "header": [],
                  "cookie": [],
                  "body": null
                }
              ]
            }
          ],
          "description": "CRUD operations for customer management based on CustomerController methods"
        },
        {
          "name": "Customer Query",
          "item": [
            {
              "name": "List Customers",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has pagination', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('customers');",
                      "    pm.expect(responseJson).to.have.property('total');",
                      "    pm.expect(responseJson).to.have.property('page');",
                      "    pm.expect(responseJson).to.have.property('page_size');",
                      "    pm.expect(responseJson).to.have.property('total_pages');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/{{apiVersion}}/customers?page=1&page_size=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "{{apiVersion}}",
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1",
                      "description": "Page number (default: 1)"
                    },
                    {
                      "key": "page_size",
                      "value": "10",
                      "description": "Number of items per page (default: 10)"
                    }
                  ]
                },
                "description": "Get a paginated list of customers with pagination support"
              },
              "response": [
                {
                  "name": "Success Response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/{{apiVersion}}/customers?page=1&page_size=10",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "{{apiVersion}}",
                        "customers"
                      ],
                      "query": [
                        {
                          "key": "page",
                          "value": "1"
                        },
                        {
                          "key": "page_size",
                          "value": "10"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"customers\": [\n    {\n      \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+1-555-0123\",\n      \"date_of_birth\": \"1990-01-15T00:00:00Z\",\n      \"address\": {\n        \"street\": \"123 Main St\",\n        \"city\": \"Anytown\",\n        \"state\": \"CA\",\n        \"postal_code\": \"12345\",\n        \"country\": \"USA\"\n      },\n      \"status\": \"active\",\n      \"created_at\": \"2025-01-17T10:30:00Z\",\n      \"updated_at\": \"2025-01-17T10:30:00Z\"\n    }\n  ],\n  \"total\": 1,\n  \"page\": 1,\n  \"page_size\": 10,\n  \"total_pages\": 1\n}"
                }
              ]
            },
            {
              "name": "Search Customers",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Search results are valid', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('customers');",
                      "    pm.expect(responseJson).to.have.property('total');",
                      "    pm.expect(Array.isArray(responseJson.customers)).to.be.true;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/{{apiVersion}}/customers/search?query=john&status=active&page=1&page_size=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "{{apiVersion}}",
                    "customers",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "john",
                      "description": "Search query (searches in name, email)"
                    },
                    {
                      "key": "status",
                      "value": "active",
                      "description": "Customer status filter (active, inactive, suspended, closed)"
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "description": "Page number (default: 1)"
                    },
                    {
                      "key": "page_size",
                      "value": "10",
                      "description": "Number of items per page (default: 10)"
                    }
                  ]
                },
                "description": "Search customers by query, status, and other criteria with pagination"
              },
              "response": [
                {
                  "name": "Success Response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/{{apiVersion}}/customers/search?query=john&status=active&page=1&page_size=10",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "{{apiVersion}}",
                        "customers",
                        "search"
                      ],
                      "query": [
                        {
                          "key": "query",
                          "value": "john"
                        },
                        {
                          "key": "status",
                          "value": "active"
                        },
                        {
                          "key": "page",
                          "value": "1"
                        },
                        {
                          "key": "page_size",
                          "value": "10"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"customers\": [\n    {\n      \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+1-555-0123\",\n      \"date_of_birth\": \"1990-01-15T00:00:00Z\",\n      \"address\": {\n        \"street\": \"123 Main St\",\n        \"city\": \"Anytown\",\n        \"state\": \"CA\",\n        \"postal_code\": \"12345\",\n        \"country\": \"USA\"\n      },\n      \"status\": \"active\",\n      \"created_at\": \"2025-01-17T10:30:00Z\",\n      \"updated_at\": \"2025-01-17T10:30:00Z\"\n    }\n  ],\n  \"total\": 1,\n  \"page\": 1,\n  \"page_size\": 10,\n  \"total_pages\": 1\n}"
                }
              ]
            }
          ],
          "description": "Query operations for listing and searching customers based on CustomerController methods"
        }
      ],
      "description": "Complete Customer Service API endpoints following the Go-Core-Bank CustomerController implementation",
      "variable": [
        {
          "key": "servicePort",
          "value": "8080",
          "type": "string"
        }
      ]
    },
    {
      "name": "Future Services",
      "item": [
        {
          "name": "Account-Service (Coming Soon)",
          "item": [
            {
              "name": "Account Service Health",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{accountServiceUrl}}/health",
                  "host": [
                    "{{accountServiceUrl}}"
                  ],
                  "path": [
                    "health"
                  ]
                },
                "description": "Health check for Account Service (Port 8081)"
              }
            }
          ],
          "description": "Future Account Service endpoints"
        },
        {
          "name": "Transaction-Service (Coming Soon)",
          "item": [
            {
              "name": "Transaction Service Health",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{transactionServiceUrl}}/health",
                  "host": [
                    "{{transactionServiceUrl}}"
                  ],
                  "path": [
                    "health"
                  ]
                },
                "description": "Health check for Transaction Service (Port 8082)"
              }
            }
          ],
          "description": "Future Transaction Service endpoints"
        }
      ],
      "description": "Placeholder folders for future microservices in the Go-Core-Bank platform"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Pre-request script for all requests",
          "console.log('Making request to:', pm.request.url.toString());",
          "",
          "// Auto-generate UUID for customer operations if not provided",
          "if (!pm.collectionVariables.get('customerId')) {",
          "    pm.collectionVariables.set('customerId', '550e8400-e29b-41d4-a716-446655440000');",
          "    console.log('Set default customer ID for testing');",
          "}",
          "",
          "// Set timestamp for requests",
          "pm.collectionVariables.set('timestamp', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script for all requests",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});",
          "",
          "pm.test('Response has Content-Type header', function () {",
          "    if (pm.response.code !== 204) {", 
          "        pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "    }",
          "});",
          "",
          "// Log response details for debugging",
          "console.log('Response Status:', pm.response.status);",
          "console.log('Response Time:', pm.response.responseTime + 'ms');",
          "",
          "// Store customer ID from create response for subsequent requests",
          "if (pm.response.code === 201 && pm.response.json && pm.response.json().id) {",
          "    pm.collectionVariables.set('customerId', pm.response.json().id);",
          "    console.log('Updated customer ID:', pm.response.json().id);",
          "}"
        ]
      }
    }
  ]
}